// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ShoppingCart.Persistency;
using System;

namespace ShoppingCart.Persistency.Migrations
{
    [DbContext(typeof(ShoppingCartContext))]
    [Migration("20180608042855_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("shoppingcarts")
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShoppingCart.Domain.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CustomerId");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("ShoppingCart.Domain.ShoppingCartProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("ShoppingCartId");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartProduct");
                });

            modelBuilder.Entity("ShoppingCart.Domain.ShoppingCartProduct", b =>
                {
                    b.HasOne("ShoppingCart.Domain.ShoppingCart")
                        .WithMany("Products")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Shared.Domain.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("ShoppingCartProductId");

                            b1.Property<double>("Amount");

                            b1.Property<string>("Exchange");

                            b1.ToTable("ShoppingCartProduct","shoppingcarts");

                            b1.HasOne("ShoppingCart.Domain.ShoppingCartProduct")
                                .WithOne("Price")
                                .HasForeignKey("Shared.Domain.Money", "ShoppingCartProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
